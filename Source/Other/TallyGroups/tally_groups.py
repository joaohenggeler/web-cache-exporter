#!/usr/bin/env python3
import csv
import glob
import os
import sys
from collections import Counter

"""
	Counts the number of different file and URL groups in the CSV files generated by the Web Cache Exporter.

	Usage:
		tally_groups.py [Optional CSV Directory Path]

	Example:
		tally_groups.py
		tally_groups.py "C:\Web Cache Exporter\ExportedCache"
"""

script_name = sys.argv[0]
num_args = len(sys.argv) - 1

if num_args not in [0, 1]:
	print(f'Wrong number of arguments. Usage: {script_name} [Optional CSV Directory Path]')
	sys.exit(1)

base_path = sys.argv[1] if num_args > 0 else ''

csv_path = os.path.join(base_path, r'*.csv')
csv_file_path_list = glob.glob(csv_path)

for i, csv_file_path in enumerate(csv_file_path_list):

	print(f'Reading the file {i+1} of {len(csv_file_path_list)}: "{csv_file_path}"...')
	print()

	file_group_counter = Counter()
	url_group_counter = Counter()

	with open(csv_file_path, newline='', encoding='utf-8') as csv_file:

		csv_reader = csv.DictReader(csv_file)
	
		for row in csv_reader:
			
			file_group = row.get('Custom File Group', '')
			url_group = row.get('Custom URL Group', '')

			if file_group != '':
				file_group_counter[file_group] += 1

			if url_group != '':
				url_group_counter[url_group] += 1

	def print_group_counter(group_counter, group_type):

		if group_counter:
			print(f'- Found the following {group_type} groups:')
		else:
			print(f'- No {group_type} groups found.')

		sorted_items = sorted(group_counter.items())

		for group, count in sorted_items:
			print(f'-> "{group}" : {count}')

	print_group_counter(file_group_counter, 'file')
	print()
	print_group_counter(url_group_counter, 'URL')
	print()

	print()

if not csv_file_path_list:
	print(f'No CSV files found in: "{base_path}"')
	print()

print('Finished running.')
